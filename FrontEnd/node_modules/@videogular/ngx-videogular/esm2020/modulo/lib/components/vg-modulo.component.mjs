import { Component, ElementRef, Input, ViewChild } from "@angular/core";
import { Gondolo } from "../utils/modulo";
import * as i0 from "@angular/core";
export class VgModuloComponent {
    startVisualizer() {
        if (!this._audioAnalyser) {
            this._audioAnalyser = new Gondolo(this.audioElement);
            const { width, height } = this.moduloConfig.dimensions;
            const canvasElement = this.waveCanvas.nativeElement;
            this._ctx = canvasElement.getContext("2d");
            canvasElement.width = width;
            canvasElement.height = height;
        }
        this.update();
    }
    update() {
        const audioFreq = this._audioAnalyser.waveform();
        const { fillStyle, strokeStyle, lineWidth, scaleFactor } = this.moduloConfig;
        const { width, height } = this.waveCanvas.nativeElement;
        // Clear canvas
        this._ctx.fillStyle = fillStyle;
        this._ctx.fillRect(0, 0, width, height);
        this._ctx.strokeStyle = strokeStyle;
        this._ctx.lineWidth = lineWidth;
        // Draw frequency lines
        this._ctx.beginPath();
        this._ctx.moveTo(0, height / 2 - audioFreq[0] * scaleFactor);
        for (let i = 0; i < audioFreq.length; i++) {
            this._ctx.lineTo((width / audioFreq.length) * i, height / 2 - audioFreq[i] * scaleFactor);
        }
        this._ctx.moveTo(0, height / 2 + audioFreq[0] * scaleFactor);
        for (let i = 0; i < audioFreq.length; i++) {
            this._ctx.lineTo((width / audioFreq.length) * i, height / 2 + audioFreq[i] * scaleFactor);
        }
        this._ctx.stroke();
        window.requestAnimationFrame(() => this.update());
    }
}
/** @nocollapse */ VgModuloComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "14.0.6", ngImport: i0, type: VgModuloComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });
/** @nocollapse */ VgModuloComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "14.0.6", type: VgModuloComponent, selector: "vg-modulo", inputs: { moduloConfig: "moduloConfig", audioElement: "audioElement" }, viewQueries: [{ propertyName: "waveCanvas", first: true, predicate: ["waveCanvas"], descendants: true }], ngImport: i0, template: "<canvas #waveCanvas></canvas>\n" });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "14.0.6", ngImport: i0, type: VgModuloComponent, decorators: [{
            type: Component,
            args: [{ selector: "vg-modulo", template: "<canvas #waveCanvas></canvas>\n" }]
        }], propDecorators: { moduloConfig: [{
                type: Input
            }], audioElement: [{
                type: Input
            }], waveCanvas: [{
                type: ViewChild,
                args: ["waveCanvas", { static: false }]
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidmctbW9kdWxvLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uLy4uL2xpYnMvbmd4LXZpZGVvZ3VsYXIvbW9kdWxvL3NyYy9saWIvY29tcG9uZW50cy92Zy1tb2R1bG8uY29tcG9uZW50LnRzIiwiLi4vLi4vLi4vLi4vLi4vLi4vLi4vbGlicy9uZ3gtdmlkZW9ndWxhci9tb2R1bG8vc3JjL2xpYi9jb21wb25lbnRzL3ZnLW1vZHVsby5jb21wb25lbnQuaHRtbCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLFVBQVUsRUFBRSxLQUFLLEVBQUUsU0FBUyxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBRXhFLE9BQU8sRUFBRSxPQUFPLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQzs7QUFNMUMsTUFBTSxPQUFPLGlCQUFpQjtJQVNyQixlQUFlO1FBQ3BCLElBQUksQ0FBQyxJQUFJLENBQUMsY0FBYyxFQUFFO1lBQ3hCLElBQUksQ0FBQyxjQUFjLEdBQUcsSUFBSSxPQUFPLENBQUMsSUFBSSxDQUFDLFlBQVksQ0FBQyxDQUFDO1lBRXJELE1BQU0sRUFBQyxLQUFLLEVBQUUsTUFBTSxFQUFDLEdBQUcsSUFBSSxDQUFDLFlBQVksQ0FBQyxVQUFVLENBQUM7WUFDckQsTUFBTSxhQUFhLEdBQUcsSUFBSSxDQUFDLFVBQVUsQ0FBQyxhQUFhLENBQUM7WUFFcEQsSUFBSSxDQUFDLElBQUksR0FBRyxhQUFhLENBQUMsVUFBVSxDQUFDLElBQUksQ0FBQyxDQUFDO1lBRTNDLGFBQWEsQ0FBQyxLQUFLLEdBQUcsS0FBSyxDQUFDO1lBQzVCLGFBQWEsQ0FBQyxNQUFNLEdBQUcsTUFBTSxDQUFDO1NBQy9CO1FBRUQsSUFBSSxDQUFDLE1BQU0sRUFBRSxDQUFDO0lBQ2hCLENBQUM7SUFFTSxNQUFNO1FBQ1gsTUFBTSxTQUFTLEdBQUcsSUFBSSxDQUFDLGNBQWMsQ0FBQyxRQUFRLEVBQUUsQ0FBQztRQUNqRCxNQUFNLEVBQUMsU0FBUyxFQUFFLFdBQVcsRUFBRSxTQUFTLEVBQUUsV0FBVyxFQUFDLEdBQUcsSUFBSSxDQUFDLFlBQVksQ0FBQztRQUMzRSxNQUFNLEVBQUMsS0FBSyxFQUFFLE1BQU0sRUFBQyxHQUFHLElBQUksQ0FBQyxVQUFVLENBQUMsYUFBYSxDQUFDO1FBRXRELGVBQWU7UUFDZixJQUFJLENBQUMsSUFBSSxDQUFDLFNBQVMsR0FBRyxTQUFTLENBQUM7UUFDaEMsSUFBSSxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsQ0FBQyxFQUFFLENBQUMsRUFBRSxLQUFLLEVBQUUsTUFBTSxDQUFDLENBQUM7UUFFeEMsSUFBSSxDQUFDLElBQUksQ0FBQyxXQUFXLEdBQUcsV0FBVyxDQUFDO1FBQ3BDLElBQUksQ0FBQyxJQUFJLENBQUMsU0FBUyxHQUFHLFNBQVMsQ0FBQztRQUVoQyx1QkFBdUI7UUFDdkIsSUFBSSxDQUFDLElBQUksQ0FBQyxTQUFTLEVBQUUsQ0FBQztRQUN0QixJQUFJLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDLEVBQUUsTUFBTSxHQUFHLENBQUMsR0FBRyxTQUFTLENBQUMsQ0FBQyxDQUFDLEdBQUcsV0FBVyxDQUFDLENBQUM7UUFFN0QsS0FBSyxJQUFJLENBQUMsR0FBRyxDQUFDLEVBQUUsQ0FBQyxHQUFHLFNBQVMsQ0FBQyxNQUFNLEVBQUUsQ0FBQyxFQUFFLEVBQUU7WUFDekMsSUFBSSxDQUFDLElBQUksQ0FBQyxNQUFNLENBQ2QsQ0FBQyxLQUFLLEdBQUcsU0FBUyxDQUFDLE1BQU0sQ0FBQyxHQUFHLENBQUMsRUFDOUIsTUFBTSxHQUFHLENBQUMsR0FBRyxTQUFTLENBQUMsQ0FBQyxDQUFDLEdBQUcsV0FBVyxDQUN4QyxDQUFDO1NBQ0g7UUFFRCxJQUFJLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDLEVBQUUsTUFBTSxHQUFHLENBQUMsR0FBRyxTQUFTLENBQUMsQ0FBQyxDQUFDLEdBQUcsV0FBVyxDQUFDLENBQUM7UUFFN0QsS0FBSyxJQUFJLENBQUMsR0FBRyxDQUFDLEVBQUUsQ0FBQyxHQUFHLFNBQVMsQ0FBQyxNQUFNLEVBQUUsQ0FBQyxFQUFFLEVBQUU7WUFDekMsSUFBSSxDQUFDLElBQUksQ0FBQyxNQUFNLENBQ2QsQ0FBQyxLQUFLLEdBQUcsU0FBUyxDQUFDLE1BQU0sQ0FBQyxHQUFHLENBQUMsRUFDOUIsTUFBTSxHQUFHLENBQUMsR0FBRyxTQUFTLENBQUMsQ0FBQyxDQUFDLEdBQUcsV0FBVyxDQUN4QyxDQUFDO1NBQ0g7UUFFRCxJQUFJLENBQUMsSUFBSSxDQUFDLE1BQU0sRUFBRSxDQUFDO1FBRW5CLE1BQU0sQ0FBQyxxQkFBcUIsQ0FBQyxHQUFHLEVBQUUsQ0FBQyxJQUFJLENBQUMsTUFBTSxFQUFFLENBQUMsQ0FBQztJQUNwRCxDQUFDOztpSUE1RFUsaUJBQWlCO3FIQUFqQixpQkFBaUIsbU9DUjlCLGlDQUNBOzJGRE9hLGlCQUFpQjtrQkFKN0IsU0FBUzsrQkFDRSxXQUFXOzhCQU9aLFlBQVk7c0JBQXBCLEtBQUs7Z0JBQ0csWUFBWTtzQkFBcEIsS0FBSztnQkFFc0MsVUFBVTtzQkFBckQsU0FBUzt1QkFBQyxZQUFZLEVBQUUsRUFBRSxNQUFNLEVBQUUsS0FBSyxFQUFFIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBFbGVtZW50UmVmLCBJbnB1dCwgVmlld0NoaWxkIH0gZnJvbSBcIkBhbmd1bGFyL2NvcmVcIjtcbmltcG9ydCB7IE1vZHVsb0NvbmZpZyB9IGZyb20gJy4uL2ludGVyZmFjZXMvbW9kdWxvLWNvbmZpZy5pbnRlcmZhY2UnO1xuaW1wb3J0IHsgR29uZG9sbyB9IGZyb20gXCIuLi91dGlscy9tb2R1bG9cIjtcblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiBcInZnLW1vZHVsb1wiLFxuICB0ZW1wbGF0ZVVybDogXCIuL3ZnLW1vZHVsby5jb21wb25lbnQuaHRtbFwiLFxufSlcbmV4cG9ydCBjbGFzcyBWZ01vZHVsb0NvbXBvbmVudCB7XG4gIHByaXZhdGUgX2F1ZGlvQW5hbHlzZXI6IEdvbmRvbG87XG4gIHByaXZhdGUgX2N0eDogQ2FudmFzUmVuZGVyaW5nQ29udGV4dDJEO1xuXG4gIEBJbnB1dCgpIG1vZHVsb0NvbmZpZzogTW9kdWxvQ29uZmlnO1xuICBASW5wdXQoKSBhdWRpb0VsZW1lbnQ6IEhUTUxBdWRpb0VsZW1lbnQ7XG5cbiAgQFZpZXdDaGlsZChcIndhdmVDYW52YXNcIiwgeyBzdGF0aWM6IGZhbHNlIH0pIHdhdmVDYW52YXM6IEVsZW1lbnRSZWY8SFRNTENhbnZhc0VsZW1lbnQ+O1xuXG4gIHB1YmxpYyBzdGFydFZpc3VhbGl6ZXIoKSB7XG4gICAgaWYgKCF0aGlzLl9hdWRpb0FuYWx5c2VyKSB7XG4gICAgICB0aGlzLl9hdWRpb0FuYWx5c2VyID0gbmV3IEdvbmRvbG8odGhpcy5hdWRpb0VsZW1lbnQpO1xuXG4gICAgICBjb25zdCB7d2lkdGgsIGhlaWdodH0gPSB0aGlzLm1vZHVsb0NvbmZpZy5kaW1lbnNpb25zO1xuICAgICAgY29uc3QgY2FudmFzRWxlbWVudCA9IHRoaXMud2F2ZUNhbnZhcy5uYXRpdmVFbGVtZW50O1xuXG4gICAgICB0aGlzLl9jdHggPSBjYW52YXNFbGVtZW50LmdldENvbnRleHQoXCIyZFwiKTtcblxuICAgICAgY2FudmFzRWxlbWVudC53aWR0aCA9IHdpZHRoO1xuICAgICAgY2FudmFzRWxlbWVudC5oZWlnaHQgPSBoZWlnaHQ7XG4gICAgfVxuXG4gICAgdGhpcy51cGRhdGUoKTtcbiAgfVxuXG4gIHB1YmxpYyB1cGRhdGUoKSB7XG4gICAgY29uc3QgYXVkaW9GcmVxID0gdGhpcy5fYXVkaW9BbmFseXNlci53YXZlZm9ybSgpO1xuICAgIGNvbnN0IHtmaWxsU3R5bGUsIHN0cm9rZVN0eWxlLCBsaW5lV2lkdGgsIHNjYWxlRmFjdG9yfSA9IHRoaXMubW9kdWxvQ29uZmlnO1xuICAgIGNvbnN0IHt3aWR0aCwgaGVpZ2h0fSA9IHRoaXMud2F2ZUNhbnZhcy5uYXRpdmVFbGVtZW50O1xuXG4gICAgLy8gQ2xlYXIgY2FudmFzXG4gICAgdGhpcy5fY3R4LmZpbGxTdHlsZSA9IGZpbGxTdHlsZTtcbiAgICB0aGlzLl9jdHguZmlsbFJlY3QoMCwgMCwgd2lkdGgsIGhlaWdodCk7XG5cbiAgICB0aGlzLl9jdHguc3Ryb2tlU3R5bGUgPSBzdHJva2VTdHlsZTtcbiAgICB0aGlzLl9jdHgubGluZVdpZHRoID0gbGluZVdpZHRoO1xuXG4gICAgLy8gRHJhdyBmcmVxdWVuY3kgbGluZXNcbiAgICB0aGlzLl9jdHguYmVnaW5QYXRoKCk7XG4gICAgdGhpcy5fY3R4Lm1vdmVUbygwLCBoZWlnaHQgLyAyIC0gYXVkaW9GcmVxWzBdICogc2NhbGVGYWN0b3IpO1xuXG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCBhdWRpb0ZyZXEubGVuZ3RoOyBpKyspIHtcbiAgICAgIHRoaXMuX2N0eC5saW5lVG8oXG4gICAgICAgICh3aWR0aCAvIGF1ZGlvRnJlcS5sZW5ndGgpICogaSxcbiAgICAgICAgaGVpZ2h0IC8gMiAtIGF1ZGlvRnJlcVtpXSAqIHNjYWxlRmFjdG9yXG4gICAgICApO1xuICAgIH1cblxuICAgIHRoaXMuX2N0eC5tb3ZlVG8oMCwgaGVpZ2h0IC8gMiArIGF1ZGlvRnJlcVswXSAqIHNjYWxlRmFjdG9yKTtcblxuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgYXVkaW9GcmVxLmxlbmd0aDsgaSsrKSB7XG4gICAgICB0aGlzLl9jdHgubGluZVRvKFxuICAgICAgICAod2lkdGggLyBhdWRpb0ZyZXEubGVuZ3RoKSAqIGksXG4gICAgICAgIGhlaWdodCAvIDIgKyBhdWRpb0ZyZXFbaV0gKiBzY2FsZUZhY3RvclxuICAgICAgKTtcbiAgICB9XG5cbiAgICB0aGlzLl9jdHguc3Ryb2tlKCk7XG5cbiAgICB3aW5kb3cucmVxdWVzdEFuaW1hdGlvbkZyYW1lKCgpID0+IHRoaXMudXBkYXRlKCkpO1xuICB9XG59XG4iLCI8Y2FudmFzICN3YXZlQ2FudmFzPjwvY2FudmFzPlxuIl19